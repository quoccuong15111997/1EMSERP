package com.firstems.erp.ui.signature.billpaymentrequest.sophieutamung;import android.app.Activity;import android.content.Intent;import android.os.Bundle;import android.text.Editable;import android.text.TextWatcher;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.EditText;import android.widget.ImageView;import android.widget.RadioButton;import android.widget.TextView;import androidx.annotation.NonNull;import androidx.annotation.Nullable;import androidx.databinding.DataBindingUtil;import androidx.fragment.app.Fragment;import androidx.lifecycle.Observer;import androidx.lifecycle.ViewModelProviders;import androidx.recyclerview.widget.DividerItemDecoration;import androidx.recyclerview.widget.LinearLayoutManager;import androidx.recyclerview.widget.RecyclerView;import com.firstems.erp.R;import com.firstems.erp.adapter.PhieuTamUngNeuCoAdapter;import com.firstems.erp.api.model.response.doi_tuong_nhan.DoiTuongNhanItem;import com.firstems.erp.api.model.response.phieu_tam_ung.PhieuTamUngItem;import com.firstems.erp.callback.ServerCheckCallback;import com.firstems.erp.common.CommonFragment;import com.firstems.erp.common.Constant;import com.firstems.erp.sharedpreferences.SharedPreferencesManager;import java.util.ArrayList;import java.util.List;public class SoPhieuTamUngFragment extends CommonFragment {        private SoPhieuTamUngViewModel mViewModel;    private View root;    private RadioButton radAll, radSelected, radUnSelect;    private RecyclerView recyclerView;    private List<PhieuTamUngItem> phieuTamUngItems;    private List<PhieuTamUngItem> phieuTamUngItemsCurrent;    private PhieuTamUngNeuCoAdapter phieuTamUngNeuCoAdapter;    private String empCode="";    private TextView txtTile;    private ImageView imgClose, imgDone;    private EditText edtSearch;    @Override    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container,                             @Nullable Bundle savedInstanceState) {        root = inflater.inflate(R.layout.so_phieu_tam_ung_fragment, container, false);        addControls();        addEvents();        return root;    }        private void addEvents() {        phieuTamUngNeuCoAdapter.setPhieuTamUngOnClickListener(new PhieuTamUngNeuCoAdapter.PhieuTamUngOnClickListener() {            @Override            public void onItemCheck(int position, PhieuTamUngItem phieuTamUngItem) {                for (int i =0;i<phieuTamUngItemsCurrent.size();i++){                    PhieuTamUngItem phieuTam = phieuTamUngItemsCurrent.get(i);                    if (phieuTam.getiTEMNAME().equals(phieuTamUngItem.getiTEMNAME())){                        phieuTamUngItemsCurrent.get(i).setCheck(true);                    }                    else {                        phieuTamUngItemsCurrent.get(i).setCheck(false);                    }                }                recyclerView.post(new Runnable() {                    @Override                    public void run() {                        phieuTamUngNeuCoAdapter.notifyDataSetChanged();                    }                });            }        });        imgClose.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                getActivity().finish();            }        });        imgDone.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                for (PhieuTamUngItem item : phieuTamUngItemsCurrent){                    if (item.isCheck()){                        Intent intent = new Intent();                        intent.putExtra(Constant.NAME_PUT_PHIEU_TAM_UNG_NEU_CO, item);                        getActivity().setResult(Activity.RESULT_OK,intent);                        getActivity().finish();                    }                }            }        });        radAll.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                phieuTamUngNeuCoAdapter.setData(phieuTamUngItemsCurrent);            }        });        radSelected.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                List<PhieuTamUngItem> list = new ArrayList<>();                for (PhieuTamUngItem item : phieuTamUngItemsCurrent){                    if (item.isCheck()){                        list.add(item);                    }                }                phieuTamUngNeuCoAdapter.setData(list);            }        });        radUnSelect.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                List<PhieuTamUngItem> list = new ArrayList<>();                for (PhieuTamUngItem item : phieuTamUngItemsCurrent){                    if (!item.isCheck()){                        list.add(item);                    }                }                phieuTamUngNeuCoAdapter.setData(list);            }        });        edtSearch.addTextChangedListener(new TextWatcher() {            @Override            public void beforeTextChanged(CharSequence charSequence, int i, int i1, int i2) {                    }                @Override            public void onTextChanged(CharSequence charSequence, int i, int i1, int i2) {                doFilter(charSequence.toString().toLowerCase());            }                @Override            public void afterTextChanged(Editable editable) {                        }        });            }        private void doFilter(String s) {        List<PhieuTamUngItem> list = new ArrayList<>();        for (PhieuTamUngItem item : phieuTamUngItemsCurrent){            if (item.getiTEMNAME().toLowerCase().contains(s)){                list.add(item);            }        }        phieuTamUngNeuCoAdapter.setData(list);    }        private void addControls() {        phieuTamUngItemsCurrent = new ArrayList<>();        phieuTamUngItems = new ArrayList<>();        phieuTamUngNeuCoAdapter = new PhieuTamUngNeuCoAdapter(phieuTamUngItems);        recyclerView = root.findViewById(R.id.recycle);        LinearLayoutManager linearLayoutManager = new LinearLayoutManager(getContext());        linearLayoutManager.setOrientation(RecyclerView.VERTICAL);        DividerItemDecoration dividerItemDecoration = new DividerItemDecoration(getContext(), linearLayoutManager.getOrientation());        recyclerView.addItemDecoration(dividerItemDecoration);        recyclerView.setLayoutManager(linearLayoutManager);        recyclerView.setAdapter(phieuTamUngNeuCoAdapter);            Intent intent = getActivity().getIntent();        DoiTuongNhanItem doiTuongNhanItem = (DoiTuongNhanItem) intent.getSerializableExtra(Constant.NAME_PUT_DOI_TUONG_NHAN);        if (doiTuongNhanItem!=null){            empCode = doiTuongNhanItem.getiTEMCODE();        }                txtTile = root.findViewById(R.id.txtTitle);        imgClose = root.findViewById(R.id.imgClose);        imgDone = root.findViewById(R.id.imgDone);                radAll = root.findViewById(R.id.radAll);        radSelected = root.findViewById(R.id.radSelected);        radUnSelect = root.findViewById(R.id.radUnSelected);                radAll.setChecked(true);                edtSearch =  root.findViewById(R.id.editTextTextPersonName2);                edtSearch.setHint(SharedPreferencesManager.getSystemLabel(207) /*Nhập số phiếu*/);                txtTile.setText(SharedPreferencesManager.getSystemLabel(206) /*Chọn số phiếu tạm ứng (nếu có)*/);    }        @Override    public void onActivityCreated(@Nullable Bundle savedInstanceState) {        super.onActivityCreated(savedInstanceState);        mViewModel = ViewModelProviders.of(this).get(SoPhieuTamUngViewModel.class);        mViewModel.setServerCheckCallback(new ServerCheckCallback() {            @Override            public void onServerLoadFail() {                showOutTOKEN();            }        });        mViewModel.loadData(empCode.split("\\*")[0]);        mViewModel.getLiveDataPhieuTamUng().observe(getViewLifecycleOwner(), new Observer<List<PhieuTamUngItem>>() {            @Override            public void onChanged(List<PhieuTamUngItem> list) {                phieuTamUngItemsCurrent.addAll(list);                phieuTamUngItems.addAll(phieuTamUngItemsCurrent);                phieuTamUngNeuCoAdapter.notifyDataSetChanged();            }        });    }    }