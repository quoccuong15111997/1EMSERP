package com.firstems.erp.ui.signature.billpaymentrequest.sophieutamung;import androidx.lifecycle.LiveData;import androidx.lifecycle.MutableLiveData;import androidx.lifecycle.ViewModel;import com.firstems.erp.api.model.response.phieu_tam_ung.PhieuTamUngApiResponse;import com.firstems.erp.api.model.response.phieu_tam_ung.PhieuTamUngItem;import com.firstems.erp.api.services.ApiServices;import com.firstems.erp.callback.ServerCheckCallback;import com.firstems.erp.callback.data.ConvertJsonCallback;import com.firstems.erp.callback.data.DataApiCallback;import com.firstems.erp.callback.data.DataSourceProviderCallback;import com.firstems.erp.callback.data.LoadApiCallback;import com.firstems.erp.common.Constant;import com.firstems.erp.data.DataConvertProvider;import com.firstems.erp.data.DataSourceProvider;import com.firstems.erp.sharedpreferences.SharedPreferencesManager;import com.google.gson.Gson;import com.google.gson.JsonObject;import java.util.List;import retrofit2.Call;import retrofit2.Callback;import retrofit2.Response;public class SoPhieuTamUngViewModel extends ViewModel {    private MutableLiveData<List<PhieuTamUngItem>> liveDataPhieuTamUng;    private ServerCheckCallback serverCheckCallback;        public void setServerCheckCallback(ServerCheckCallback serverCheckCallback) {        this.serverCheckCallback = serverCheckCallback;    }        public SoPhieuTamUngViewModel() {        liveDataPhieuTamUng = new MutableLiveData<>();            }        public void loadData(String emplCode) {        DataSourceProvider.getInstance().getDataSource(Constant.RUN_CODE_PHIEU_TAM_UNG_NEU_CO, emplCode, new LoadApiCallback() {            @Override            public void onApiLoadSuccess(DataApiCallback dataApiCallback) {                JsonObject jsonObject = new JsonObject();                jsonObject.addProperty("CONDFLTR", emplCode);                ApiServices.getInstance().getListPhieuTamUngNeuCo(SharedPreferencesManager.getInstance().getPrefToken(), jsonObject, new Callback<PhieuTamUngApiResponse>() {                    @Override                    public void onResponse(Call<PhieuTamUngApiResponse> call, Response<PhieuTamUngApiResponse> response) {                        if (response.isSuccessful()){                            if (response.body().isRETNCODE()){                                dataApiCallback.onDataApi(new Gson().toJson(response.body()));                            }                            else {                                dataApiCallback.onApiLoadFail(response.body().getRETNMSSG());                            }                        }                        else {                            dataApiCallback.onApiLoadFail(response.message());                        }                    }                        @Override                    public void onFailure(Call<PhieuTamUngApiResponse> call, Throwable t) {                        dataApiCallback.onDataApi(t.getMessage());                    }                });            }                @Override            public void onApiLoadFail() {                serverCheckCallback.onServerLoadFail();            }        }, new DataSourceProviderCallback() {            @Override            public void onDataSource(String data) {                DataConvertProvider.getInstance().convertJsonToObject(data, new PhieuTamUngApiResponse(), new ConvertJsonCallback() {                    @Override                    public void onConvertSuccess(Object obj) {                        PhieuTamUngApiResponse phieuTamUngApiResponse = (PhieuTamUngApiResponse) obj;                        liveDataPhieuTamUng.setValue(phieuTamUngApiResponse.getPhieuTamUngItems());                    }                });            }                @Override            public void onUpdateImage(int status) {                    }        });    }        public LiveData<List<PhieuTamUngItem>> getLiveDataPhieuTamUng() {        return liveDataPhieuTamUng;    }}