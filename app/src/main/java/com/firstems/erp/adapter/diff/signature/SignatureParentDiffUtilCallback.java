package com.firstems.erp.adapter.diff.signature;import android.os.Bundle;import androidx.annotation.Nullable;import androidx.recyclerview.widget.DiffUtil;import androidx.recyclerview.widget.ListUpdateCallback;import com.firstems.erp.adapter.signature.SignatureModel;import com.firstems.erp.common.Constant;import java.io.Serializable;import java.util.List;public class SignatureParentDiffUtilCallback extends DiffUtil.Callback {    private List<SignatureModel> newList;    private List<SignatureModel> oldList;        public SignatureParentDiffUtilCallback(List<SignatureModel> newList, List<SignatureModel> oldList) {        this.newList = newList;        this.oldList = oldList;    }        @Override    public int getOldListSize() {        return oldList != null ? oldList.size() : 0;    }        @Override    public int getNewListSize() {        return newList != null ? newList.size() : 0;    }        @Override    public boolean areItemsTheSame(int oldItemPosition, int newItemPosition) {        return true;        /*return newList.get(oldItemPosition).getSignatureItemApiResponseList().size() == oldList.get(oldItemPosition).getSignatureItemApiResponseList().size();*/    }        @Override    public boolean areContentsTheSame(int oldItemPosition , int newItemPosition) {        final boolean[] result = {true};        DiffUtil.DiffResult diffResult = DiffUtil.calculateDiff(new SignatureDiffUtilCallBack(newList.get(newItemPosition).getSignatureItemApiResponseList(),                oldList.get(oldItemPosition).getSignatureItemApiResponseList()));        diffResult.dispatchUpdatesTo(new ListUpdateCallback() {            @Override            public void onInserted(int position, int count) {                System.out.println("onInserted");                result[0] = false;            }                @Override            public void onRemoved(int position, int count) {                System.out.println("onRemoved");                result[0] = false;            }                @Override            public void onMoved(int fromPosition, int toPosition) {                System.out.println("onMoved");                result[0] = false;            }                @Override            public void onChanged(int position, int count, @Nullable Object payload) {                System.out.println("onChanged");                result[0] = false;            }        });                return result[0];    }        @Nullable    @Override    public Object getChangePayload(int oldItemPosition, int newItemPosition) {        SignatureModel newModel = newList.get(newItemPosition);        SignatureModel oldModel = newList.get(newItemPosition);        Bundle diff = new Bundle();        diff.putSerializable(Constant.NAME_PUT_DIFF_LIST, (Serializable) newModel.getSignatureItemApiResponseList());        if (diff.size() == 0) {            return null;        }        return diff;    }}