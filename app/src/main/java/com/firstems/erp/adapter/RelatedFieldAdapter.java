package com.firstems.erp.adapter;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.CheckBox;import android.widget.TextView;import androidx.annotation.NonNull;import androidx.constraintlayout.widget.ConstraintLayout;import androidx.recyclerview.widget.RecyclerView;import com.firstems.erp.R;import com.firstems.erp.api.model.response.lanh_vuc_lien_quan.LanhVucLienQuan;import com.firstems.erp.databinding.RelatedFieldsFragmentBinding;import com.firstems.erp.enums.TypeSelect;import java.util.List;/** * Created by Nguyen Quoc Cuong on 9/1/2020. */public class RelatedFieldAdapter extends RecyclerView.Adapter<RelatedFieldAdapter.ViewHolder> {    public interface RelatedFieldOnclickListener{        void onItemClick(int position,int oldPosition, LanhVucLienQuan item);    }    private RelatedFieldOnclickListener relatedFieldOnclickListener;    private List<LanhVucLienQuan> list;    private TypeSelect typeSelect;    public void setTypeSelect(TypeSelect typeSelect) {        this.typeSelect = typeSelect;    }    public List<LanhVucLienQuan> getList() {        return list;    }    public void setList(List<LanhVucLienQuan> list) {        this.list = list;    }    public RelatedFieldAdapter() {    }    public void setRelatedFieldOnclickListener(RelatedFieldOnclickListener relatedFieldOnclickListener) {        this.relatedFieldOnclickListener = relatedFieldOnclickListener;    }    @NonNull    @Override    public ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {        LayoutInflater layoutInflater =LayoutInflater.from(parent.getContext());        View view = layoutInflater.inflate(R.layout.item_check, parent, false);        return new ViewHolder(view);    }    @Override    public void onBindViewHolder(@NonNull ViewHolder holder, int position) {        LanhVucLienQuan item = list.get(position);        holder.txtContent.setText(item.getiTEMNAME() !=null ? item.getiTEMNAME() : "");        holder.chk.setChecked(item.isChecked());        holder.layout.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                if (typeSelect==TypeSelect.SINGEL){                    list.get(holder.getOldPosition()).setChecked(false);                    holder.chk.setChecked(!holder.chk.isChecked());                    list.get(position).setChecked(holder.chk.isChecked());                    item.setChecked(holder.chk.isChecked());                    relatedFieldOnclickListener.onItemClick(position,holder.getOldPosition(),item);                }                else if (typeSelect==TypeSelect.MULTI){                    holder.chk.setChecked(!holder.chk.isChecked());                    item.setChecked(holder.chk.isChecked());                    relatedFieldOnclickListener.onItemClick(position,holder.getOldPosition(),item);                }            }        });    }    @Override    public int getItemCount() {        return list.size();    }    class ViewHolder extends RecyclerView.ViewHolder{        TextView txtContent;        CheckBox chk;        ConstraintLayout layout;        public ViewHolder(@NonNull View itemView) {            super(itemView);            txtContent=itemView.findViewById(R.id.txtContent);            chk=itemView.findViewById(R.id.chk);            layout = itemView.findViewById(R.id.layoutMain);        }    }}